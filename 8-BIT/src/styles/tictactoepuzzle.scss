/* 
  SCSS for the Tic-Tac-Toe component.
  Utilizes BEM (Block Element Modifier) naming conventions for better organization and readability.
*/

.tic-tac-toe {
  /* 
    Main container for the Tic-Tac-Toe game.
    Centers content both vertically and horizontally.
    Sets the text color to white and applies a pixelated font.
  */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 20px;
  color: white;
  font-family: $font-pixel;

  &__title {
    /* 
      Styles the game title.
      Increases font size, adds spacing below, transforms text to uppercase,
      and adds letter spacing for a distinct look.
    */
    font-size: 2rem;
    margin-bottom: 15px;
    text-transform: uppercase;
    letter-spacing: 2px;
  }

  &__board {
    /* 
      Styles the game board as a grid.
      Defines a 3x3 grid with gaps between cells, a semi-transparent background,
      padding, and rounded corners for aesthetics.
    */
    display: grid;
    grid-template-columns: repeat(3, 100px);
    grid-template-rows: repeat(3, 100px);
    gap: 5px;
    background: rgba(255, 255, 255, 0.2);
    padding: 10px;
    border-radius: 10px;
  }

  &__cell {
    /* 
      Styles each cell within the game board.
      Sets dimensions, background color, text styling, and centers content.
      Adds a pointer cursor for interactivity and a border for definition.
      Includes transitions for smooth hover effects.
    */
    width: 100px;
    height: 100px;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    font-size: 2rem;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    border: 2px solid white;
    transition: background 0.3s ease-in-out, transform 0.1s ease-in-out;

    &:hover {
      /* 
        Changes background color and slightly enlarges the cell when hovered.
        Provides visual feedback to the user.
      */
      background: rgba(255, 255, 255, 0.3);
      transform: scale(1.05);
    }

    /* 
      BEM Modifiers for special states of the cell.
      Different background colors indicate different game states.
    */

    &--win {
      /* 
        Indicates a winning move by the AI.
        Changes the background to green.
      */
      background: #4caf50; // Green for winning move
    }

    &--lose {
      /* 
        Indicates a losing move by the player.
        Changes the background to red.
      */
      background: #f44336; // Red if player loses
    }

    &--draw {
      /* 
        Indicates a draw.
        Changes the background to yellow.
      */
      background: #ffeb3b; // Yellow for a draw
    }
  }

  &__status {
    /* 
      Styles the status message displayed below the game board.
      Increases font size and adds spacing above.
      Sets the text color to yellow for visibility.
    */
    font-size: 1.2rem;
    margin-top: 15px;
    color: #ffeb3b;
  }

  &__reset-button {
    /* 
      Styles the reset button.
      Positions it at the bottom right, sets background and text colors,
      adds padding and border radius for shape, and ensures it stays on top with a high z-index.
      Includes a hover effect for interactivity.
    */
    position: absolute;
    bottom: 1rem;
    right: 8rem;
    background: red;
    color: white;
    padding: 0.5rem;
    border: none;
    border-radius: 0.25rem;
    cursor: pointer;
    z-index: 9999;

    &:hover {
      /* 
        Darkens the background color when hovered to indicate it's clickable.
      */
      background: darkred;
    }
  }
}
